name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build:
    name: Backend Analysis
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: temurin

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./front
        run: npm ci

      - name: Run frontend tests
        working-directory: ./front
        run: npm test -- --watch=false --code-coverage --browsers=ChromeHeadless

      - name: Build and verify backend with Maven
        working-directory: ./back
        run: mvn verify

       - name: Commit and push coverage reports
  env:
    PAT: ${{ secrets.PAT }}
  run: |
    git config --global user.name 'github-actions'
    git config --global user.email 'github-actions@github.com'
    git remote set-url origin https://github.com/${{ github.repository }}
    git pull --rebase origin main || echo "Nothing to rebase"
    git add -f ./front/coverage/bobapp/lcov.info || echo "No lcov.info"
    git add -f ./back/target/site/jacoco/jacoco.xml || echo "No jacoco.xml"
    git commit -m "Add coverage reports [skip ci]" || echo "Nothing to commit"
    git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }} HEAD:main


      - name: SonarCloud Scan (Backend)
        uses: SonarSource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=edouard06_p10-backend
            -Dsonar.organization=edouard06
            -Dsonar.sources=back/src/main
            -Dsonar.tests=back/src/test
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -X

  frontend-build:
    name: Frontend Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./front
        run: npm ci

      - name: Run frontend tests with coverage
        working-directory: ./front
        run: npm test -- --watch=false --code-coverage --browsers=ChromeHeadless

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./front